#include <bits/stdc++.h>
using namespace std;
using ll = long long;
string tach(string a){
	string res, token;
	stringstream ss(a);
	while(ss >> token){
		res += toupper(token[0]);
	}
	return res;
}
string doi(string a){
	string s;
	for (int i=0;i<a.size();i++){
		s[i] = tolower(a[i]);
	}
	return s;
}
class GiangVien{
	private:
		string mgv, ten, nganh, name;
		static int cnt;
	public:
		friend istream& operator >> (istream& in, GiangVien &a);
		friend ostream& operator << (ostream& out, GiangVien a);
		string getT(){
			return this -> name;
		}
};
int GiangVien :: cnt = 0;
istream& operator >> (istream& in, GiangVien &a){
	getline(in, a.ten);
	getline(in, a.nganh);
	a.cnt++;
	for (int i=0;i<a.ten.size();i++){
		a.name += tolower(a.ten[i]);
	}
	if (a.cnt < 10) a.mgv = "GV0" + to_string(a.cnt);
	else a.mgv = "GV" + to_string(a.cnt);
	return in;
}
ostream& operator << (ostream& out, GiangVien a){
	out << a.mgv << " " << a.ten << " " << tach(a.nganh) << endl;
	return out;
}
void solve(){
	int n; cin >> n;
	getchar();
	GiangVien a[n];
	for (int i=0;i<n;i++) cin >> a[i];
	int q; cin >> q;
	while (q--){
		string s; cin >> s;
		cout << "DANH SACH GIANG VIEN THEO TU KHOA " << s << ":\n";
		for (int i=0;i<s.size();i++) s[i] = tolower(s[i]);
		for (GiangVien x : a){
			if (x.getT().find(s) != string :: npos) cout << x;
		}
	}
}
int main(){
	solve();
}
